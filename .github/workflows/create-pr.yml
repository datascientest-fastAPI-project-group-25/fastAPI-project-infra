name: PR Creation - with Machine User Token
# This workflow creates a pull request from a feature or fix branch to the main branch 🚀

on:
  push:
    branches:
      - 'feat/*'
      - 'feature/*'
      - 'fix/*'
      - 'hotfix/*'

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Generate PR Body
        id: pr-body
        run: |
          # Start with basic info
          echo "Generating PR body..."
          
          # Create PR body with terraform plan summary
          cat << EOF > pr_body.txt
          ## Infrastructure Changes
          
          This PR includes the following changes:
          
          ### Modified Resources
          $(git diff --name-status main | awk '{printf "* %s %s\n", $1, $2}')
          
          ### Impact
          These changes affect the following environments:
          $(find terraform/environments -type f -name "*.tf" -exec dirname {} \; | sort -u | sed 's/terraform\/environments\//\* /')
          
          ### Review Notes
          🔍 Please review:
          * Resource changes and their impact
          * Security implications
          * Cost implications
          * Compliance requirements
          
          ### Checklist
          - [ ] Terraform configurations follow best practices
          - [ ] Changes are properly documented
          - [ ] Security considerations addressed
          - [ ] Cost impact assessed
          
          _Generated by Infrastructure CI/CD Pipeline_
          EOF
          
          # Escape the content for GitHub Actions
          body="$(cat pr_body.txt)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "BODY=$body" >> $GITHUB_ENV

      - name: Create Pull Request with GitHub CLI
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.MACHINE_USER_TOKEN }}
        run: |
          # Check if an open PR already exists from this branch to main
          existing_pr_url=$(gh pr list --head "${{ env.BRANCH_NAME }}" --base main --state open --json url --jq '.[0].url')

          if [ -n "$existing_pr_url" ]; then
            echo "Pull request already exists: $existing_pr_url"
            pr_url="$existing_pr_url"
            pr_number=$(basename "$pr_url" | cut -d'/' -f1)
            # Set outputs
            echo "pull-request-url=$pr_url" >> $GITHUB_OUTPUT
            echo "pull-request-number=$pr_number" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Extract type (feat/fix) from branch name
          if [[ "${{ env.BRANCH_NAME }}" == feat/* ]] || [[ "${{ env.BRANCH_NAME }}" == feature/* ]]; then
            TYPE="feat"
          elif [[ "${{ env.BRANCH_NAME }}" == fix/* ]] || [[ "${{ env.BRANCH_NAME }}" == hotfix/* ]]; then
            TYPE="fix"
          else
            TYPE="other"
          fi

          # No open PR found, create a new one
          pr_url=$(gh pr create \
            --base main \
            --head "${{ env.BRANCH_NAME }}" \
            --title "$TYPE: Infrastructure changes from ${{ env.BRANCH_NAME }}" \
            --body "${{ env.BODY }}")

          echo "PR URL: $pr_url"

          # Extract PR number from URL
          pr_number=$(basename "$pr_url" | cut -d'/' -f1)

          # Set outputs
          echo "pull-request-url=$pr_url" >> $GITHUB_OUTPUT
          echo "pull-request-number=$pr_number" >> $GITHUB_OUTPUT

      - name: PR Details
        if: steps.create-pr.outputs.pull-request-number
        run: |
          echo "PR #${{ steps.create-pr.outputs.pull-request-number }} created: ${{ steps.create-pr.outputs.pull-request-url }}"