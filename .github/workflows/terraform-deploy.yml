name: Terraform Deployment

on:
  push:
    branches:
      - development
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-deploy.yml'

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [development, staging, production]
        include:
          - environment: development
            branch: development
          - environment: staging
            branch: development
          - environment: production
            branch: main
    
    # Only run for the appropriate branch
    if: |
      (github.ref == 'refs/heads/development' && (matrix.environment == 'development' || matrix.environment == 'staging')) ||
      (github.ref == 'refs/heads/main' && matrix.environment == 'production')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
          
      - name: Terraform Init
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform init
          
      - name: Terraform Plan
        id: plan
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform plan -no-color -input=false -out=tfplan
        continue-on-error: true
        
      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-${{ matrix.environment }}
          path: terraform/environments/${{ matrix.environment }}/tfplan
          
      - name: Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
        
  apply:
    name: Terraform Apply
    needs: plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [development, staging, production]
        include:
          - environment: development
            branch: development
            auto_approve: true
          - environment: staging
            branch: development
            auto_approve: true
          - environment: production
            branch: main
            auto_approve: false
    
    # Only run for the appropriate branch
    if: |
      (github.ref == 'refs/heads/development' && (matrix.environment == 'development' || matrix.environment == 'staging')) ||
      (github.ref == 'refs/heads/main' && matrix.environment == 'production')
    
    environment: ${{ matrix.environment }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
          
      - name: Terraform Init
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform init
          
      - name: Download Plan
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan-${{ matrix.environment }}
          path: terraform/environments/${{ matrix.environment }}
          
      - name: Terraform Apply
        if: ${{ matrix.auto_approve }}
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform apply -auto-approve tfplan
          
      - name: Terraform Apply (Manual Approval)
        if: ${{ !matrix.auto_approve }}
        run: |
          cd terraform/environments/${{ matrix.environment }}
          terraform apply tfplan
